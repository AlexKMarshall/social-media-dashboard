import Head from "next/head"
import Link from "next/link"
import { Logo } from "src/components/logo"
import type { NextPage } from "next"
import { screenReaderOnly } from "src/styles/accessibility.css"
import { useId } from "@react-aria/utils"

const Home: NextPage = () => {
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <header>
          <h1>Social Media Dashboard</h1>
          <p>Total Followers: 23,004</p>
        </header>
        <SocialFollowersCard
          brand="facebook"
          socialLink={<Link href="/">@nathanf</Link>}
          value={1987}
          changePercent={12}
        />
        <SocialFollowersCard
          brand="twitter"
          socialLink={<Link href="/">@nathanf</Link>}
          value={1044}
          changePercent={99}
        />
        <SocialFollowersCard
          brand="instagram"
          socialLink={<Link href="/">@nathanf</Link>}
          value={11000}
          changePercent={1099}
        />
        <h2>Overview - Today</h2>
        <MetricCard
          metric="Page Views"
          brand="facebook"
          value={87}
          change={3}
        />
      </main>
    </>
  )
}

export default Home

type Brand = "facebook" | "twitter" | "instagram" | "youtube"

type SocialFollowersCardProps = {
  brand: Brand
  socialLink: JSX.Element
  logo?: JSX.Element
  value: number
  metric?: string
  changePercent: number
  period?: string
}
function SocialFollowersCard({
  brand,
  socialLink,
  logo,
  value,
  metric = "followers",
  changePercent,
  period = "today",
}: SocialFollowersCardProps): JSX.Element {
  const headingId = useId()

  const changeDirection = changePercent >= 0 ? "up" : "down"
  return (
    <article aria-labelledby={headingId}>
      <header>
        <h2 id={headingId} className={screenReaderOnly}>
          {brand}
        </h2>
        <Logo brand={brand} aria-hidden />
        <p>{socialLink}</p>
      </header>
      <p>
        <span>{value}</span> <span>{metric}</span>
      </p>
      <footer>
        <span>{changeDirection}</span> {changePercent} {period}
      </footer>
    </article>
  )
}

type MetricCardProps = {
  metric: string
  brand: Brand
  value: number
  change: number
}
function MetricCard({
  metric,
  brand,
  value,
  change,
}: MetricCardProps): JSX.Element {
  const headingId = useId()
  const changeDirection = change >= 0 ? "up" : "down"

  return (
    <article aria-labelledby={headingId}>
      <h3 id={headingId}>
        <span>{metric}</span>
        <span className={screenReaderOnly}>{brand}</span>
      </h3>
      <Logo brand={brand} aria-hidden />
      <p>{value}</p>
      <p>
        <span>{changeDirection}</span>
        <span>{change}%</span>
      </p>
    </article>
  )
}
